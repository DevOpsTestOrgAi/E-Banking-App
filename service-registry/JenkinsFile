pipeline {
    agent any

    environment {
        PATH = "${tool 'Maven'}/bin:${env.PATH}"
        registryName = 'algabrizaid/serviceregistry'
        imageTag = "latest-${BUILD_NUMBER}"
        GIT_CONFIG_NAME = 'zaidgabri'
        GIT_CONFIG_EMAIL = 'zaidgabri976@gmail.com'
    }

    stages {
        stage('Build and Test Service Registry') {
            steps {
                dir('service-registry') {
                    sh 'ls -ltr'
                    sh 'mvn clean package'
                }
            }
        }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "algabrizaid/serviceregistry:${imageTag}"
                DOCKERFILE_LOCATION = "service-registry/Dockerfile"
                REGISTRY_CREDENTIALS = credentials('dockerhub')
            }
            steps {
                script {
                    dir('service-registry') {
                        sh 'docker build -t ${DOCKER_IMAGE} .'
                    }
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "dockerhub") {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update Manifests and Push to Git') {
            steps {
                script {
                    echo "Current directory: ${pwd()}"
                    def cloneDir = 'GitOps'
                    sh "rm -rf ${cloneDir}"
                    if (!fileExists(cloneDir)) {
                        sh "git clone https://github.com/zaidgabri/GitOps.git ${cloneDir}"
                    }

                    gitConfigure()

                    echo "File content before sed:"
                    sh "cat ${cloneDir}/k8s/service-registry-deployment.yml"

                    dir(cloneDir) {
                        sh "sed -i 's|image: algabrizaid/serviceregistry:latest.*|image: algabrizaid/serviceregistry:${imageTag}|' k8s/service-registry-deployment.yml || echo 'sed command failed'"
                    }

                    echo "File content after sed:"
                    sh "cat ${cloneDir}/k8s/service-registry-deployment.yml"

                    withCredentials([usernamePassword(credentialsId: 'git', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        dir(cloneDir) {
                            sh "git status"
                            sh "git add ."
                            sh "git status"
                            sh "git commit -m 'Update image tag in Kubernetes manifests'"
                        
                            sh "git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/zaidgabri/GitOps.git HEAD:main"
                        }
                    }

                    sh "rm -rf ${cloneDir}"
                }
            }
        }
    }
}

def gitConfigure() {
    sh "git config user.email ${GIT_CONFIG_EMAIL}"
    sh "git config user.name ${GIT_CONFIG_NAME}"
}
