version: "3"
services:
  db:
    image: postgres:12
    restart: unless-stopped
    environment:
      - POSTGRES_USER=sonarqube
      - POSTGRES_PASSWORD=sonarpass
      - POSTGRES_DB=sonarqube
    networks:
      - spring

  mysql:
    image: mysql:latest
    ports:
      - "3306:3306"
    networks:
      - spring
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=linkedin-clone
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  sonarqube:
    image: sonarqube
    environment:
      - SONARQUBE_JDBC_USERNAME=sonarqube
      - SONARQUBE_JDBC_PASSWORD=sonarpass
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonarqube
    ports:
      - "9000:9000"
      - "9092:9092"
    networks:
      - spring

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "22181:2181"
    networks:
      - spring


  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    networks:
      - spring
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      SPRING_PROFILES_ACTIVE: docker

  api-gateway:
    image: medelouali/api-gateway
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - spring
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka
      SPRING_PROFILES_ACTIVE: docker
    links:
      - discovery

  discovery:
    image: medelouali/eureka-server
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - spring
    environment:
      SPRING_PROFILES_ACTIVE: docker

  jobs:
    image: medelouali/jobs
    container_name: jobs
    build:
      context: ./jobs
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - spring
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka
      SPRING_PROFILES_ACTIVE: docker
    links:
      - discovery

  kafka-events-router:
    image: medelouali/kafka-events-router
    container_name: kafka-events-router
    build:
      context: ./kafka-events-router
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    networks:
      - spring
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka
      SPRING_PROFILES_ACTIVE: docker
    links:
      - discovery



networks:
  spring:
    driver: bridge