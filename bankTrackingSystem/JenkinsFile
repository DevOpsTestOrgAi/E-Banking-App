pipeline {
    agent any

    environment {
        PATH = "${tool 'Maven'}/bin:${env.PATH}"
        registryName = 'algabrizaid/banktrackingservice'
        imageTag = "latest-${BUILD_NUMBER}"
        GIT_CONFIG_NAME = 'zaidgabri'
        GIT_CONFIG_EMAIL = 'zaidgabri976@gmail.com'
    }

    stages {


            stage('Checkout Source Code') {
                steps {
                    script {
//                         deleteDir() // Optional: clean workspace before checkout
                        checkout([$class: 'GitSCM',
                                  branches: [[name: 'main']],
                                  doGenerateSubmoduleConfigurations: false,
                                  extensions: [[$class: 'CleanBeforeCheckout']],
                                  userRemoteConfigs: [[url: 'https://github.com/DevOpsTestOrgAi/E-Banking-App.git']]])
                    }
                }
            }
        stage('Build and Test Service Registry') {
            steps {
                dir('banktrackingservice') {
                    sh 'ls -ltr'
                    // sh '/usr/local/bin/docker-compose -f kafka-docker-compose.yml up -d'
                    // sh 'sleep 10'
                    sh 'mvn clean package'
                }
            }
        }



        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "algabrizaid/banktrackingservice:${imageTag}"
               DOCKERFILE_LOCATION = "banktrackingservice/Dockerfile"
                REGISTRY_CREDENTIALS = credentials('dockerhub')
            }
            steps {
                script {
                    sh 'docker build -t ${DOCKER_IMAGE} ./banktrackingservice'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "dockerhub") {
                        dockerImage.push()
                    }
                sh 'docker rmi -f ${DOCKER_IMAGE}'
                }
            }
        }

        stage('Update Manifests and Push to Git') {
            steps {
                script {
                    echo "Current directory: ${pwd()}"
                    def cloneDir = 'GitOps'
                     sh "rm -rf ${cloneDir}"
                    if (!fileExists(cloneDir)) {

                        sh "git clone https://github.com/zaidgabri/GitOps.git ${cloneDir}"
                    }

                    gitConfigure()

                    def manifestsDir = "${cloneDir}/k8s"
                    def newImageLine = "image: ${registryName}:${imageTag}"

                    echo "File content before sed:"
                    sh "cat ${manifestsDir}/banktrackingservice-deployment.yml"

                    sh "sed -i 's|image: algabrizaid/banktrackingservice:latest.*|${newImageLine}|' ${manifestsDir}/banktrackingservice-deployment.yml || echo 'sed command failed'"

                    echo "File content after sed:"
                    sh "cat ${manifestsDir}/banktrackingservice-deployment.yml"

                 withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                        dir(cloneDir) {
                            sh "git status"
                            sh "git add ."
                            sh "git status" // Print status again to verify changes
                            sh "git commit -m 'Update image tag in Kubernetes manifests'"
                            sh "git pull"
                           sh "git push https://${GITHUB_TOKEN}@github.com/zaidgabri/GitOps.git HEAD:main" //ssa
                        }
                    }

                    sh "rm -rf ${cloneDir}"
                }
            }
        }
    }
}

def gitConfigure() {
    sh "git config user.email ${GIT_CONFIG_EMAIL}"
    sh "git config user.name ${GIT_CONFIG_NAME}"
}
